ext.FTP_USER="ket1999"
group = "com.techshroom"
version = "1.0.0"

apply plugin: 'java'
apply plugin: 'application'

mainClassName = 'com.techshroom.hendrix.Main'

apply from: 'util.gradle', to: project

// token: a54f9f87121b530f4a918f7b156efb2c259ff0db

// ext.oauth = "a54f9f87121b530f4a918f7b156efb2c259ff0db"

apply from: 'github.gradle', to: project

println "=== Configuring $name ==="

def root = project

apply plugin: 'eclipse'
// java 7 compat
ext.JAVA_COMPAT = '1.7'
ext.eclipse17='org.eclipse.jdt.launching.JRE_CONTAINER/org.eclipse.jdt.internal.debug.ui.launcher.StandardVMType/JavaSE-' + JAVA_COMPAT
eclipse.classpath.containers.clear()
eclipse.classpath.containers eclipse17
compileJava.sourceCompatibility = JAVA_COMPAT
compileJava.targetCompatibility = JAVA_COMPAT

apply plugin: 'apt2'

eclipse {
    jdt {
        sourceCompatibility = JAVA_COMPAT
        targetCompatibility = JAVA_COMPAT
    }
}

// eclipse bug workaround
project.tasks.eclipse.dependsOn('cleanEclipse')

repositories {
    mavenCentral()
    maven {
        url "https://oss.sonatype.org/content/repositories/snapshots/"
    }
}

sourceSets {
    testData {
        java {
            srcDir 'src/test/java-export'
            output.classesDir 'testData/classes'
        }
        resources {
            srcDir 'src/test/resources-export'
        }
        compileClasspath += sourceSets.main.runtimeClasspath
    }
}

configurations.all {
   resolutionStrategy {
        // fail eagerly on version conflict (includes transitive dependencies)
        // e.g. multiple different versions of the same dependency (group and name are equal)
        failOnVersionConflict()

        // force certain versions of dependencies (including transitive)
        force 'com.google.auto.service:auto-service:1.0-rc2'
        force 'com.google.guava:guava:18.0'

        cacheDynamicVersionsFor 10, 'minutes'
        // don't cache changing modules at all
        cacheChangingModulesFor 0, 'seconds'
    }
}

dependencies {
    compile group: 'org.apache.logging.log4j', name: 'log4j-core', version: '2.0.2'
    compile group: 'org.apache.logging.log4j', name: 'log4j-api', version: '2.0.2'
    compile group: 'net.sf.jopt-simple', name: 'jopt-simple', version: '4.7'
    compile group: 'com.google.code.gson', name: 'gson', version: '2.3'
    compile 'com.google.inject:guice:3.0'
    compile 'org.functionaljava:functionaljava:4.2-beta-1'
    // I think this is only for java 8 // compile 'org.functionaljava:functionaljava-java8:4.2-beta-1'
    addAPTReqWComp group: 'com.google.guava', name: 'guava', version: '18.0'
    addAPTReqWComp group: 'org.ow2.asm', name: 'asm-debug-all', version: '5.0.3'
    addAPT group: 'com.google.auto.factory', name: 'auto-factory', version: '0.1-beta1'
    addAPT group: 'com.google.auto.service', name: 'auto-service', version: '1.0-rc2'
    addAPT group: 'com.google.auto.value', name: 'auto-value', version: '1.0-rc4'
    addAPTReq name: 'aopalliance'
    addAPTReq name: 'asm'
    addAPTReq name: 'auto-value'
    addAPTReq name: 'auto-common'
    addAPTReq name: 'cglib'
    addAPTReq name: 'commons-collections'
    addAPTReq name: 'commons-lang'
    addAPTReq name: 'dagger'
    addAPTReq name: 'javawriter'
    addAPTReq name: 'javax.inject'
    addAPTReq name: 'velocity'

    testCompile group: 'junit', name: 'junit', version: '4.+'
}

apply plugin: 'maven'

uploadArchives {
    repositories {
        mavenDeployer {
            repository(url: file("../Techshroom.github.io/downloads/maven").toURI().toURL())
        }
    }
}

println '=== Complete ==='

if (_hasProperty("TRAVIS") && _property("TRAVIS").toBoolean()) {
    apply from: 'travis.gradle', to: project
}
